<Window x:Class="NYPC.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:NYPC.ViewModel"
        xmlns:local="clr-namespace:NYPC"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="390">

    <Window.DataContext>
        <vm:ViewModel />
    </Window.DataContext>

    <Grid Margin="10">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="100" />
            <ColumnDefinition Width="50" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="60" />
            <RowDefinition Height="60" />
            <RowDefinition Height="60" />
            <RowDefinition Height="60" />
        </Grid.RowDefinitions>

        <!--Title-->
        <TextBlock Grid.ColumnSpan="3" TextWrapping="Wrap" FontFamily="Arial" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15"><Bold>Radiation Biologically equivalent dose (EQD2) Calculator</Bold><LineBreak/><Span FontSize="10" Foreground="DimGray">Calculates biologically equivalent dose (EQD2) for cancer radiotherapy</Span></TextBlock>

        <!--Lebels-->
        <TextBlock Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="15">Dose per fraction</TextBlock>

        <TextBlock VerticalAlignment="Center" TextWrapping="Wrap" HorizontalAlignment="Left" FontSize="15" Grid.Row="2">Total dose<LineBreak/> <Span FontSize="10" Foreground="DimGray">Number of fractions x dose per fraction</Span></TextBlock>

        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" TextWrapping="Wrap" HorizontalAlignment="Left" FontSize="15" Grid.Row="3">α/β ratio<LineBreak/> <Span FontSize="10" Foreground="DimGray">Typically 10 for early-responding tissues and tumer, 3 for late-responding tissues(normal tissue) </Span></TextBlock>

        <TextBlock Grid.Row="4" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Arial" FontSize="35" Foreground="White" Background="Green" Height="40" Margin="0,10.2,-11.2,9.8" Width="364" Grid.ColumnSpan="3">
            <Run Text="EQD&#x2082;"/>
        </TextBlock>

        <!--cGy-->
        <TextBlock Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0.4,20.2,34,19.8" Background="LightGray" Height="20" Width="16">Gy</TextBlock>

        <TextBlock Grid.Column="2" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0.4,20.2,34,19.8" Background="LightGray" Height="20" Width="16">Gy</TextBlock>

        <TextBlock Grid.Column="2" Grid.Row="4" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Margin="1.4,27.2,33.8,12.8" Height="20" Width="16" RenderTransformOrigin="0.481,0.97">Gy</TextBlock>

        <!--Warnings-->
        <TextBlock Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Foreground="Red" FontSize="10" Margin="10.2,0,11.8,7.8" Grid.ColumnSpan="2" Width="130" Text="{Binding Warning1}"/>

        <TextBlock Grid.Column="1" Grid.Row="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Foreground="Red" FontSize="10" Margin="10.2,0,11.8,7.8" Grid.ColumnSpan="2" Width="130" Text="{Binding Warning2}"/>

        <TextBlock Grid.Column="1" Grid.Row="3" VerticalAlignment="Bottom" HorizontalAlignment="Center" Foreground="Red" FontSize="10" Margin="10.2,0,11.8,7.8" Grid.ColumnSpan="2" Width="130" Text="{Binding Warning3}"/>

        <!--TextBoxes-->
        <TextBox Grid.Column="1" Grid.Row="1" PreviewTextInput="Check" Foreground="{Binding Color1}" TextAlignment="Right" Margin="10,20,0,20" Text="{Binding Dpf, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Resources>
                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                            <VisualBrush.Visual>
                                <Label Content="Norm: 0-12" Foreground="DarkGray" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBox Grid.Row="2" Grid.Column="1" PreviewTextInput="Check" Foreground="{Binding Color2}" Margin="10,20,0,20" TextAlignment="Right" Text="{Binding Total, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Resources>
                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                            <VisualBrush.Visual>
                                <Label Content="Norm: 20-80" Foreground="DarkGray" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBox Grid.Row="3" Grid.Column="1" PreviewTextInput="Check" Foreground="{Binding Color3}" Margin="10,20,0,20" TextAlignment="Right" Text="{Binding AB, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Resources>
                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                            <VisualBrush.Visual>
                                <Label Content="Norm: 3-10" Foreground="DarkGray" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <!--EQD2 Calculation Result-->
        <TextBlock FontWeight="Bold" Grid.Column="1" Grid.Row="4" Margin="6.2,14.2,3.6,15.8" Opacity="0" TextAlignment="Right" Foreground="White" FontSize="25" Text="{Binding Ans, Mode=OneWay, NotifyOnTargetUpdated=True}">
            <TextBlock.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0" />
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:1" To="1.0" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </TextBlock.Triggers>
        </TextBlock>

        <!--Lines-->
        <Line Grid.ColumnSpan="3" X1="0" Y1="60" X2="350" Y2="60" Stroke="Gray" StrokeThickness="1"/>
        <Line Grid.ColumnSpan="3" Grid.RowSpan="2" X1="0" Y1="120" X2="350" Y2="120" Stroke="Gray" StrokeThickness="1"/>
        <Line Grid.ColumnSpan="3" Grid.RowSpan="3" X1="0" Y1="180" X2="350" Y2="180" Stroke="Gray" StrokeThickness="1"/>
        <Line Grid.ColumnSpan="3" Grid.RowSpan="4" X1="0" Y1="240" X2="350" Y2="240" Stroke="Gray" StrokeThickness="1"/>

    </Grid>
</Window>
